// Copyright ¬© 2023 TDS. All rights reserved. 2023-11-16 Î™© Ïò§Ï†Ñ 11:23 ÍøÄÍøÄüê∑

import SwiftUI

/// ÎèÑÏ∞©ÏòàÏ†ïÏãúÍ∞Ñ ÌòÑÌô© View
struct ArrivalTimeView: View {
    @ObservedObject var vm: MainDetailVM
    
    var body: some View {
        HStack(spacing: 2) {
            contentView(.up)
            contentView(.down)
        }
    }
}

// UI Î™®Îìà Methods
extension ArrivalTimeView {
    /// Ïª®ÌÖêÏ∏†
    /// (ÏÉÅÌñâ, ÌïòÌñâ) Íµ¨Î∂Ñ,
    @ViewBuilder func contentView(_ updn: MainDetailVM.UpDn) -> some View {
        var destiStation: String {
            updn == .up ? vm.stationInfo.upStNm : vm.stationInfo.downStNm
        }
        
        var trainDatas: [RealTimeSubway] {
            updn == .up ? vm.upRealTimeInfos : vm.downRealTimeInfos
        }
        
        LazyVStack(spacing: 0, pinnedViews: .sectionHeaders) {
            Section {
                VStack(alignment: .leading, spacing: 10) {
                    VStack(spacing: 5) {
                        Text("Ïù¥Î≤à Ïó¥Ï∞®")
                            .font(.subheadline)
                        
                        Rectangle()
                            .frame(maxWidth: .infinity)
                            .frame(height: 1)
                        
                        ForEach(trainDatas, id: \.id) { info in
                            HStack {
                                Text(info.trainDestiStation)
                                Text(info.message)
                            }
                        }
                        Spacer()
                    }
                    .frame(maxWidth: .infinity)
                    .frame(height: 100)
                    
                    Divider()
                    
                    VStack(spacing: 5) {
                        Text("Îã§Ïùå Ïó¥Ï∞®")
                            .font(.subheadline)
                        
                        Rectangle()
                            .frame(maxWidth: .infinity)
                            .frame(height: 1)
                        
//                        ForEach(0..<3, id: \.self) { _ in
//                            Text(downMsg)
//                        }
                        Spacer()
                    }
                    .frame(maxWidth: .infinity)
                    .frame(height: 100)
                    
                }
                .font(.callout)
                .frame(maxWidth: .infinity)
                .padding(.horizontal, 3)
                .padding(.vertical, 10)
                .background {
                    Color.gray.opacity(0.2)
                }
            } header: {
                Text(updn.rawValue)
                    .foregroundStyle(Color.white)
                    .bold()
                    .frame(maxWidth: .infinity)
                    .frame(height: 15)
                    .padding(10)
                    .background {
                        vm.hosunInfo.lineColor
                    }
            }
            
        }
        
    }
}

struct ArrivalTimeView_Previews: PreviewProvider {
    static var previews: some View {
        // Ïù¥ Î∂ÄÎ∂ÑÏóêÏÑú MainListRepositoryÎ•º ÌÖåÏä§Ìä∏Ïö© Îç∞Ïù¥ÌÑ∞Î•º Î∞òÌôòÌïòÎäî classÎ°ú ÏÉàÎ°ú ÏÉùÏÑ±ÌïòÏó¨ Ï£ºÏûÖÌï¥Ï£ºÎ©¥ ÌÖåÏä§Ìä∏Ïö© PreviewÍ∞Ä ÏôÑÏÑ±.!!
        MainDetailView(vm: MainDetailVM(useCase: MainDetailUseCase(repo: MainListRepository(networkStore: SubwayAPIService()))))
            .previewDisplayName("ÎîîÌÖåÏùº")
        
        MainListView()
            .previewDisplayName("Î©îÏù∏Î¶¨Ïä§Ìä∏")        
    }
}
